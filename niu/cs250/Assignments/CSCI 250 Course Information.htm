<HTML>
<HEAD>
<TITLE>CSCI 250 Course Information</TITLE>
</HEAD>

<BODY>
<PRE>
     CSCI 250                COURSE INFORMATION                 SPRING 2001


     INSTRUCTOR:______________________________________     SECTION:________

     OFFICE:________________________   TELEPHONE:__________________________

     OFFICE HOURS:_________________________________________________________

                  _________________________________________________________


     TEACHING  ASSISTANT:__________________________________________________

     OFFICE:____________________  TELEPHONE (if available)_________________

     OFFICE HOURS:_________________________________________________________

                  _________________________________________________________


     DESCRIPTION:  From the current Undergraduate Catalog:

          250. COMPUTER PROGRAMMING IN COBOL (4).  A laboratory course in
          computer programming using the COBOL language.  Emphasis on
          applications which require data management and the solution of
          problems involving evaluation of large amounts of data.  Extensive
          laboratory work.  PRQ:  MATH 110 or consent of department.


     REQUIRED MATERIALS:
          1.  COBOL:  FROM MICRO TO MAINFRAME, Third Edition,
                by Robert T. Grauer & Carol Vazquez Villar
          2.  CSCI 250 COBOL PROGRAMMING NOTES AND EXAMPLES
                (available at the University Book Store)
                (includes copies of powerpoint slides)
          3.  Flowcharting Template
          4.  A Few Clips (to keep the parts of an assignment together)

     WEB PAGE:

     CSCI 250 has a web page.  It is not fancy, so it will not entertain you,
     but it will contain information you need as you go through this course.
     Timely announcements will be posted there, so get in the habit of
     checking it frequently.  Also, starting with assignment 2, you will be
     expected to get your assignments from the web page (i.e., they will not
     be handed out in class).  Visit the web page at

          www.cs.niu.edu/CSCI250/main250.html   (CSCI must be all capitals)

     Alternatively, from the CSCI department web page

          www.cs.niu.edu

     click "Course Offerings" (rightmost on the blue bar).  Scroll down and
     click "Course Web Pages."  Then click "CSCI 250 Course Information."




     GRADING STANDARDS:

     There will be approximately twelve assignments of varying point values.
     Additional quizzes or homework assignments may also be included in the
     calculation of an assignment average.  There will be two 150-point
     comprehensive exams and one 200-point comprehensive final exam.  Final
     grades will be based on a final average, determined as follows:

          FINAL AVERAGE = (PROGRAM AVERAGE * .4) + (EXAM AVERAGE * .6)

     Letter grades will be assigned to the final average using the following
     scale:  100%-92%=A, 91%-84%=B, 83%-76%=C, 75%-68%=D, 67% and under = F.
     You must achieve a passing grade on BOTH the program average and the
     exam average in order to pass this course.

     NOTE:  Programming assignments are NOT optional!  For each program not
     handed in your final grade will be lowered by one letter in addition to
     a point value of 0 being assigned to each of the missing assignments.


     PROGRAMMING ASSIGNMENTS:

     For a programming assignment to earn credit, it must meet two deadlines:
     (1) it must be run by the date and time specified by the instructor,
     and (2) it must be handed in by the date and time specified by the
     instructor.

     You will be allowed one free, no questions asked, no penalty,
     24-clock-hour extension during the semester.  (Be aware that labs may
     be open only a few of those 24 hours.) When using this extension, YOU
     must write the words FREE EXTENSION on the front of the program.  Turn
     it in at or before the first class meeting following the new run time.

     Other programs may be turned in with run times up to 24 clock hours
     beyond the assigned run time, but a penalty will be assessed.  There is
     a 15% penalty for a program run up to 12 clock hours late, and a 30%
     penalty for a program run 12 - 24 clock hours late.  YOU must write the
     words LATE 15% or LATE 30% on the front of these programs.

     There will be NO extensions of any kind allowed on programs that are
     due during the last week of class.

     NOTE:  The free extension and the 15%/30% penalty options cannot be
     combined.

     Any program with a run time more than 24 hours late will receive a
     grade of ZERO.  Any program not turned in by the date and time specified
     by the instructor will be subject to a point penalty as determined by
     the instructor. Any program not turned in within one week of the
     original due date will receive a grade of ZERO even if it was run on
     time.

     ON THE FRONT OF EACH ASSIGNMENT you must write the following
     information: your name, instructor's name, class and section number,
     assignment number, due date and time, and any extension information.

     Each programming assignment must be well documented and accompanied by
     a flowchart of the program logic.


     BACKUP COPIES:

     Prior to the deadline, run your final program a second time, again
     directing the output to a printer.  This second printed copy is your
     backup.  Keep it until you get the graded copy back.  If the instructor
     is missing a grade for you, the backup copy will enable you to prove
     that your program was done on time.


     EXAMS:

     The two 150-point exams are mass exams and most likely will be held from
     9:00 p.m.-10:15 p.m. on days to be announced in class.  The final exam
     (200 points) for each section will be held according to the final exam
     schedule in the current semester's Schedule of Classes.


     ATTENDANCE POLICY:

     The student is responsible for everything said or handed out in class.
     If you miss a lecture, do not expect the instructor to give you a
     private make up lecture.  If you are unable to make a scheduled test,
     you MUST contact the instructor BEFORE the test.


     HELP:

     Teaching assistants and instructors are available during scheduled
     office hours to help you debug programs.  You are expected to bring a
     CURRENT copy of your EXECUTED program.  A rough draft of your flowchart
     would be helpful too.


     PROGRAM GRADING GUIDELINES:

     NOTE:  These programs are time consuming.  START EARLY!!!  Allow for
     computer down time when scheduling your work.

     The points for a programming assignment are allocated as follows:
               50 percent -- Output
               25 percent -- Coding Technique
               25 percent -- Documentation

     Coding technique:  Programs with good coding technique do not have
     ABENDS or warning messages.  Programs with good coding technique are
     efficient, structured, modifiable and maintainable.  They follow the
     patterns taught in class.

     Documentation:  The program documentation and flowcharts must be
     complete and must match the program code.  Good documentation makes it
     easier for another programmer to modify the program in the future.

     Any program that does not show, in the instructor's opinion, a
     reasonable attempt to complete the assignment will receive a ZERO.

     If you have any questions regarding a program grade, see your TA first.
     The instructor will make the final decision on any grade disputes.  All
     grading inquiries must be made WITHIN ONE WEEK of the in-class return of
     the assignment.

     CHEATING:

     DON'T DO IT!  Cheating in any form will not be tolerated.  Your
     instructor can give you an F for the course.  In addition, ALL cheating
     WILL result in the filing of an academic misconduct report with the
     university judicial office.  A second academic misconduct report can
     result in expulsion from the university.

     Although you may discuss course topics with other class members, your
     assignment must reflect your own work. Here are a few examples of what
     is allowed and what is not allowed:

     Allowed:
          - How many decimal places are we supposed to print?
             Are we supposed to print a 2-digit year or a 4-digit year?
               (Both questions request clarification of requirements.)

          - How do you round to 2 decimal places?
            What instruction do you use to get a 4-digit year?
                 (Both questions involve a small, isolated detail.)

          - I'm getting a syntax error.  Can you explain what it means?
               (A specific debugging question.)

          - My loop is not exiting.  Can you look at my code and see if you
            can see what might be wrong?
               (Debugging assistance on a specific topic.)

     NOT allowed:
          - How do you write the routine that processes a record?
               (Requires explanation or writing of many lines of code.)

          - Can you show me how you calculated the standard deviation?
               (Again, many lines of code.)

          - I can't figure out this program.  Can I see how you did it? (!!)

     Note that even the number of "allowed" questions should be moderate.  If
     you find yourself asking more than a couple of questions a day of
     others, you are probably asking too much. While this in itself is not
     cheating, it indicates that you are not learning the material yourself.
     Study class notes and examples or seek help from your TA or instructor.

     The following are clear examples of cheating:

     1.  Two or more people working so closely together on an assignment that
     the programs handed in are identical in logic.

     2.  Two or more people working on a program where each does a part and
     the combined result is one program.

     3.  Any person letting anyone else use a flowchart, program listing, or
     any form of program code to write and/or debug his/her program.  Both
     the lender and the borrower are guilty of cheating.

     4.  Any person picking up or using a file, flowchart, program listing or
     any form of program code which is not the result of her/his own work.



                              TENTATIVE SCHEDULE
     _______________________________________________________________________
     Week 1    NO CLASS ON MONDAY (MARTIN LUTHER KING DAY)
     (1/15)    PRIOR READING:
                    Grauer:   Chapters 1, 2, and 3
                    Notes:    Flowcharts
               TOPICS:
                    Introduction to COBOL; structured programming; top-down
                    design; flowcharting.
               ASSIGNMENTS:
                    Hand out:   0 (typing and executing a program)
                                1 (flowcharting)
     _______________________________________________________________________
     Week 2    PRIOR READING:
     (1/22)         Grauer:   Chapter 4, Chapter 5 (pages 97-106)
                    Notes:    Selected Features of COBOL-85 (Explicit Scope
                              Terminators); Documentation
               TOPICS:
                    COBOL divisions; Verbs: OPEN, CLOSE, READ, WRITE, MOVE,
                    PERFORM procedure-name UNTIL (read loop with priming
                    read); STOP RUN; program documentation.
               ASSIGNMENTS:
                    Due:      0 and 1
                    Hand out: 2 (using the verbs listed above)
     _______________________________________________________________________
     Week 3    PRIOR READING:
     (1/29)         Grauer:   Chapters 5 and 6
                    Notes:    COBOL Debugging; Arithmetic Worksheet
               TOPICS:
                    Arithmetic verbs and COMPUTE; ROUNDED; REMAINDER;
                    ON SIZE ERROR; DISPLAY.
               ASSIGNMENTS:
                    Due:      2
                    Hand out: 3 (arithmetic, page and column heads)
     _______________________________________________________________________
     Week 4    PRIOR READING:
     (2/5)          Grauer:   Chapter 5 (pages 106-109, IF, EVALUATE)
                              Chapter 7
                    Notes:    Edited Output Worksheet
                              Selected Features of COBOL-85 (EVALUATE)
               TOPICS:
                    IF; EVALUATE; signed numbers; edited output; BLANK WHEN
                    ZERO clause.
               ASSIGNMENTS:
                    Due:      3
                    Hand out: 4 (edited output, IF, multi-page report)
     ______________________________________________________________________
     Week 5    PRIOR READING:
     (2/12)         Grauer:   Chapter 8 (pages 200-203, compound conditions)
                              Chapter 9, pages 236-237, INITIALIZE)
                              Chapter 14 (pages 403-419, SORT with
                                 USING/GIVING)
                              Chapter 15
                    Notes:    Selected Features of COBOL-85 (INITIALIZE)
               TOPICS:
                    Compound conditions; INITIALIZE; introduce control break
                    logic, basic sorting with using/giving options.
               EXAM 1:
                    Covers material through Chapter 6 and related lectures.

     _______________________________________________________________________
     Week 6    PRIOR READING:
     (2/19)         Grauer:   Chapter 8 (pages 203-207, Nested IF, ACCEPT)
                              Chapter 9, pages 242-245, ACCEPT, MOVE CORR)
                              Chapter 15 (control break)
                    Notes:    Pseudocode Algorithm (3-Level Control Break)
                              MOVE CORR worksheet
               TOPICS:
                    Control break logic; ACCEPTing the date; MOVE
                    CORR.
               ASSIGNMENTS:
                    Hand out: 5  (control break)
                    Due:      4
     _______________________________________________________________________
     Week 7    PRIOR READING:
     (2/26)          Grauer:   Chapter 9, Chapter 11 (pages 302-321)
                     Notes:    Intrinsic Functions (SUM,MEAN,MEDIAN)
               TOPICS:
                    String processing; variations on PERFORM, including
                    in-line PERFORM; WRITE FROM; READ INTO; false condition
                    branch (NOT AT END); subscripted tables; intrinsic
                    functions.
               ASSIGNMENTS:
                    Due:      5
                    Hand out: 6 (subscripted tables, checking for valid
                                input)
     _______________________________________________________________________
     Week 8    PRIOR READING:
     (3/5)           Grauer:   Chapter 11, Chapter 12
               TOPICS:
                    Indexed tables; types of searches; SEARCH; SEARCH ALL.
               ASSIGNMENTS:
                    Due:      6
                    Hand out: 7 (indexed tables, tables searching)
     _______________________________________________________________________
     (3/12)    SPRING BREAK
     _______________________________________________________________________
     Week 9    PRIOR READING:
     (3/19)         Grauer:   Chapter 17 (pages 515-528)
               TOPICS:
                    Introduction to sequential file processing and
                    maintenance; multiple input/output files; logical vs.
                    physical records, blocking; use of REDEFINES for
                    multiple types of records in a single file.
               ASSIGNMENTS:
                    Due:      7
                    Hand out: 8 (data validation)
     _______________________________________________________________________
     Week 10   PRIOR READING:
     (3/26)         Grauer:   Chapter 8 (pages 195-200)
               TOPICS:
                    Relation condition, class test, sign test, condition
                    names.
               EXAM 2:
                    Covers material listed through Week 8 and related
                    lectures.




     _______________________________________________________________________
     Week 11   PRIOR READING:
     (4/2)          Notes:    Pseudocode Algorithm (Extract Program)
               TOPICS:
                    Parameter records; extract logic.
               ASSIGNMENTS:
                    Due:      8
                    Hand out: 9 (extract)
     _______________________________________________________________________
     Week 12   PRIOR READING:
     (4/9)          Grauer:   Chapter 17
                    Notes:    Pseudocode Algorithm (Sequential Master File
                              Update)
               TOPICS:
                    Sequential master file update.
               ASSIGNMENTS:
                    Due:      9
                    Hand out: 10 (sequential master file update)
     _______________________________________________________________________
     Week 13   TOPICS:
     (4/16)         Finish sequential master file update.
                    Possibly: Catch up or review.
                              Introduce related topics.
     _______________________________________________________________________
     Week 14   PRIOR READING:
     (4/23)         Grauer:   Chapter 13
               TOPICS:
                    Multi-level tables.
               ASSIGNMENTS:
                    Due:      10
                    Hand out: 11 (multi-level tables)
     _______________________________________________________________________
     Week 15   PRIOR READING:
     (4/30)         To be announced
               TOPICS:
                    To be announced (Possibilities:  Usage clause; more on
                    sorting; merging; review of any topic; Cobol 2002).
               ASSIGNMENTS:
                    Due:      11
     _______________________________________________________________________
     Week 16   FINAL EXAM:
     (5/7)          See this semester's Schedule of Classes booklet for the
                    date and time of the final exam for your section.

                    YOU MUST TAKE YOUR FINAL EXAM AT THAT TIME.
     _______________________________________________________________________


     ADDITIONAL READING MAY BE ASSIGNED AS NEEDED.












                         ----------------------------
                         TENTATIVE ASSIGNMENT SUMMARY
                         ----------------------------


                                                               WEEK     WEEK
     NUMBER   POINTS               TOPIC                        OUT      DUE

       0        20      Punch and run (pages 5-6 in NOTES)        1        2

       1        40      Flowcharts                                1        2

       2        40      MOVE, READ, WRITE, PERFORM...UNTIL
                           (read loop with priming read)          2        3

       3        40      Arithmetic, page and column heads         3        4

       4        60      More arithmetic, edited output,
                           signed numbers, IF, EVALUATE           4        6

       5        60      Control break                             6        7

       6        60      Subscripted tables                        7        8

       7        60      Indexed tables                            8        9

       8       100      Data validation                           9       11

       9        60      Extract and Report                       11       12

      10       100      Sequential master file update            12       14

      11        40      Multi-level tables                       14       15
               ____

     Total     680


     ADDITIONAL HOMEWORK MAY BE ASSIGNED AS NEEDED.


</PRE>
</BODY>
</HTML>
