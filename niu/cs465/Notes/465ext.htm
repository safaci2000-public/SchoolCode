<html>
<head>
<title>COBOL External Routines</title>
</head>
<body>

<font face="Courier New" size=4>

<p><b>COBOL External Routines</b></p>

</font><font face="Courier New" size=3>

<p>COBOL can call external programs written in any language that follows
standard linkage conventions.  The external programs DO NOT have to be 
compiled within the same JOB as the COBOL calling program.</p>

<p>The LINKAGE EDITOR will link the calling program with the called 
program.</p>

<p>To call an external program, the <b>CALL</b> statement will be used.</p>

</font><font face="Courier New" size=4>
<p><pre>

<b>Static Calling Format:</b>  CALL  'pgm_name'  USING  PARM1  PARM2.
  
  - pgm_name is linked into the load module of the calling program
    during the linkage editor step


  <b>pgm_name</b>   this is the name of the program that is being called
             maximum of 8 characters
             COBOL: this is a PROGRAM-ID
             ASSEMBLER: this is a CSECT name
             

  <b>USING</b>      this signals that a parameter list will follow
      

  <b>PARM1 PARM2..</b>   these are the parameters that are being passed
                  to the external program



<b>Dynamic Calling Format:</b>   MOVE 'pgm-name' to ws-field.
                            CALL  ws-field  USING  PARM1  PARM2.
  
  - ws-field is a field in WORKING-STORAGE that has the external
    program name moved to it prior to calling the external program
  
  - pgm_name is linked into the load module of the calling program
    at run time
  
  - pgm_name must be a member of STEPLIB
</pre></p>

<p>&nbsp;</p>
<p><b>Calling Program:</b></p>
</font><font face="Courier New" size=3>

<p>Does not know the language that the external program is written in.</p>

<p>Standard ASSEMBLER code for calling subprograms (routines) will be 
generated by the COBOL compiler.</p>

</font><font face="Courier New" size=4>
<p><pre>
  - a parameter list will be set up
  - the address of the parameter list will be put into register 1
  - the subprogram will be BALRed to
</pre></p>

<p>&nbsp;</p>
<p><b>Called Program:</b></p>

<p>Does not know the language that the calling program is written in.</p>

</font><font face="Courier New" size=4>
<p><pre>
- the DATA DIVISION must contain a <b>LINKAGE SECTION</b>, which
  is where the parameter list will be described

    
       DATA DIVISION.
       
       WORKING-STORAGE SECTION.
       
          *** working storage code goes here ***
       
       LINKAGE SECTION.
       
         01  PARM-1           PIC X(30).
         01  PARM-2           PIC 9(10)  COMP-3.
         
         
  the LINKAGE SECTION is really just a DSECT describing the fields
  in the <b>calling</b> program's WORKING-STORAGE SECTION.  In
  other words, the data is not actually stored in the called
  program's LINKAGE SECTION.
    

  the parameter names in the LINKAGE SECTION do not have to be
  the same as the ones in the calling program.  The only 
  requirement is that the lengths of the data fields are the same.
    
    
       In calling program:
       
          01  NAME    PIC X(20)   VALUE 'STEVEN    TYLER'.
          
          
       In called program:
       
          01  NAME-FLD.
              05  FIRST-NAME   PIC X(10).
              05  LAST-NAME    PIC X(10).


    
- the PROCEDURE DIVISION statement must contain a USING statement 
  that lists the parameters being passed to the routine
    
  the parameters must be 01 level items in the LINKAGE SECTION

  the program must terminate with a <b>GOBACK</b> rather than a
  STOP RUN    

    
       PROCEDURE DIVISION USING PARM-1 PARM-2.
       
          *** procedure division code goes here ***
       
          GOBACK.    
    
</pre></p>
</font>
</body>
</html>
